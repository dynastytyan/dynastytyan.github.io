{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/components/CriticalToast.svelte","../../src/components/CriticalToastContainer.svelte","../../src/components/Button.svelte","../../src/services/media-stream-error-message.js","../../src/components/Spinner.svelte","../../src/services/is-mobile.js","../../src/services/media-devices.js","../../src/services/local-storage.js","../../src/components/Select.svelte","../../src/components/DeviceSettingsModal.svelte","../../src/services/socket.js","../../src/components/IncomingCall.svelte","../../src/services/logger.js","../../src/ice-servers.js","../../src/services/webrtc.js","../../src/components/Call.svelte","../../src/App.svelte","../../src/services/copy.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\r\n\r\nexport const deviceSelectorPopupSubject = writable(false);\r\nexport const userInfoSubject = writable();\r\nexport const criticalErrorSubject = writable('');\r\n","<script>\r\n  export let show = false;\r\n</script>\r\n\r\n<style>\r\n  .critical-toast {\r\n    padding: 5px 15px;\r\n    background-color: tomato;\r\n    color: #fff;\r\n    border-radius: 10px;\r\n    margin: 10px;\r\n    transition: 0.3s opacity;\r\n    opacity: 0;\r\n  }\r\n\r\n  .show {\r\n    opacity: 1;\r\n  }\r\n</style>\r\n\r\n<div class:show class=\"critical-toast\">\r\n  <span><slot /></span>\r\n</div>\r\n","<script>\r\n  import { criticalErrorSubject } from './../stores.js';\r\n  import CriticalToast from './CriticalToast.svelte';\r\n\r\n  let errors = [];\r\n\r\n  const _onErrorOccured = (er) => {\r\n    if (!er) {\r\n      return;\r\n    }\r\n\r\n    errors = [...errors, { text: er, status: 'visible' }];\r\n\r\n    setTimeout(() => {\r\n      errors = errors.map((e) => {\r\n        if (e.text === er) {\r\n          return { text: er, status: 'hidden' };\r\n        }\r\n\r\n        return e;\r\n      });\r\n    }, 3500);\r\n\r\n    setTimeout(() => {\r\n      _unshiftError();\r\n      criticalErrorSubject.set('');\r\n    }, 4000);\r\n  };\r\n\r\n  const _unshiftError = () => {\r\n    errors.shift();\r\n    errors = errors;\r\n  };\r\n\r\n  criticalErrorSubject.subscribe(_onErrorOccured);\r\n</script>\r\n\r\n<style>\r\n  .critical-container {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    justify-content: flex-end;\r\n    padding: 40px;\r\n  }\r\n</style>\r\n\r\n<div class=\"critical-container\">\r\n  {#each errors as error}\r\n    <CriticalToast show={error.status === 'visible'}>{error.text}</CriticalToast>\r\n  {/each}\r\n</div>\r\n","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  export let type = 'button';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function handleClick() {\r\n    dispatch('onClick');\r\n  }\r\n</script>\r\n\r\n<style>\r\n  button {\r\n    border-radius: 5px;\r\n    background: #fde931;\r\n    font-weight: bold;\r\n    padding: 7px 15px;\r\n    cursor: pointer;\r\n    /* border: 3px solid #648f00; */\r\n    text-transform: uppercase;\r\n    margin: 10px;\r\n    box-shadow: 5px 5px 10px #000;\r\n  }\r\n\r\n  button[disabled] {\r\n    cursor: not-allowed;\r\n    box-shadow: none;\r\n  }\r\n</style>\r\n\r\n<button {...$$props} {type} on:click={handleClick}><slot /></button>\r\n","export const mediaStreamErrorMsg = (exception) => {\r\n  switch (exception) {\r\n    case 'NotFoundError':\r\n    case 'DevicesNotFoundError':\r\n      return 'Target media device is not found or it is unplugged.';\r\n\r\n    case 'NotReadableError':\r\n    case 'TrackStartError':\r\n      return 'Your camera may be used by another app.';\r\n\r\n    case 'NotAllowedError':\r\n    case 'PermissionDeniedError':\r\n      return 'Your browser denies capturing video from your camera.';\r\n\r\n    case 'OverconstrainedError':\r\n    case 'ConstraintNotSatisfiedError':\r\n      return 'Something went wrong with constraints.';\r\n\r\n    default:\r\n      return 'Something went wrong.';\r\n  }\r\n};\r\n","<script>\r\n</script>\r\n\r\n<style>\r\n  .lds-ripple {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n  .lds-ripple div {\r\n    position: absolute;\r\n    border: 4px solid #fde931;\r\n    opacity: 1;\r\n    border-radius: 50%;\r\n    animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\r\n  }\r\n  .lds-ripple div:nth-child(2) {\r\n    animation-delay: -0.5s;\r\n  }\r\n  @keyframes lds-ripple {\r\n    0% {\r\n      top: 36px;\r\n      left: 36px;\r\n      width: 0;\r\n      height: 0;\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      top: 0px;\r\n      left: 0px;\r\n      width: 72px;\r\n      height: 72px;\r\n      opacity: 0;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div {...$$props} class=\"lds-ripple\">\r\n  <div />\r\n  <div />\r\n</div>\r\n","export const isMobile = () => {\r\n  return window.innerWidth < 600;\r\n};\r\n","export const getUserMedia = (constraintsObj = { video: true, audio: true }) => {\r\n  return navigator.mediaDevices.getUserMedia(constraintsObj);\r\n};\r\n\r\nexport const getDisplayMedia = () => {\r\n  return navigator.mediaDevices.getDisplayMedia({audio: true, video: true});\r\n};\r\n\r\nexport const getMediaDevices = async () => {\r\n  const devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n  const cameras = filterByKind(devices, 'videoinput');\r\n  const microphones = filterByKind(devices, 'audioinput');\r\n  const speakers = filterByKind(devices, 'audiooutput');\r\n\r\n  return [cameras, microphones, speakers];\r\n};\r\n\r\nexport const generateConstraintsObject = (camera, microphone) => {\r\n  const generateDeviceConfig = (device) => {\r\n    if (device) {\r\n      return {\r\n        deviceId: {\r\n          exact: device.deviceId,\r\n        },\r\n      };\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return {\r\n    video: generateDeviceConfig(camera),\r\n    audio: generateDeviceConfig(microphone),\r\n  };\r\n};\r\n\r\nconst filterByKind = (devices, kind) => {\r\n  return devices.filter((device) => device.kind === kind);\r\n};\r\n","const devicesToken = () => '__devices_token';\r\nconst userToken = () => '__user_token';\r\n\r\nexport const saveDevices = (o) => {\r\n  localStorage.setItem(devicesToken(), JSON.stringify(o));\r\n};\r\n\r\nexport const fetchDevices = () => {\r\n  const rawDeviceData = localStorage.getItem(devicesToken());\r\n  const devices = JSON.parse(rawDeviceData);\r\n\r\n  return devices;\r\n};\r\n\r\nexport const saveUserDetails = (data) => {\r\n  localStorage.setItem(userToken(), JSON.stringify(data));\r\n};\r\n\r\nexport const fetchUserDetails = () => {\r\n  const raw = localStorage.getItem(userToken());\r\n\r\n  if (raw) {\r\n    return JSON.parse(raw);\r\n  }\r\n\r\n  return null;\r\n};\r\n","<script>\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\texport let items = [];\r\n\texport let title = \"<label of select>\";\r\n\texport let key;\r\n\texport let value;\r\n\texport let defaultValue;\r\n\r\n\tfunction handleChange(e) {\r\n\t\tdispatch(\"onSelect\", e.target.value);\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tpadding: 10px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tselect {\r\n\t\tbackground: #555;\r\n\t\tcolor: #eee;\r\n\t\tpadding: 5px;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t\twidth: 100%;\r\n\t}\r\n</style>\r\n\r\n{#if items.length > 0}\r\n\t<div>\r\n\t\t<h4>{title}</h4>\r\n\t\t<!-- svelte-ignore a11y-no-onchange -->\r\n\t\t<select on:change={handleChange}>\r\n\t\t\t{#each items as item}\r\n\t\t\t\t<option selected={item[key] === defaultValue} value={item[key]}>{item[value]}</option>\r\n\t\t\t{/each}\r\n\t\t</select>\r\n\t</div>\r\n{/if}\r\n","<script>\r\n  import { mediaStreamErrorMsg } from './../services/media-stream-error-message.js';\r\n  import Spinner from './Spinner.svelte';\r\n  import { isMobile } from './../services/is-mobile.js';\r\n  import { generateConstraintsObject } from './../services/media-devices.js';\r\n  import { deviceSelectorPopupSubject, criticalErrorSubject } from './../stores.js';\r\n  import { fetchDevices, saveDevices } from './../services/local-storage.js';\r\n  import Button from './Button.svelte';\r\n  import { getUserMedia, getMediaDevices } from '../services/media-devices.js';\r\n  import Select from './Select.svelte';\r\n  import { onDestroy, onMount } from 'svelte';\r\n\r\n  let stream;\r\n  let cameras = [],\r\n    microphones = [],\r\n    speakers = [];\r\n\r\n  let selectedCamera, selectedMicrophone, selectedSpeaker;\r\n\r\n  onMount(async () => {\r\n    try {\r\n      const alreadySelectedDevices = fetchDevices();\r\n\r\n      if (alreadySelectedDevices) {\r\n        selectedCamera = alreadySelectedDevices.selectedCamera;\r\n        selectedMicrophone = alreadySelectedDevices.selectedMicrophone;\r\n        selectedSpeaker = alreadySelectedDevices.selectedSpeaker;\r\n      }\r\n\r\n      _subscribeOnEscapeClick();\r\n      _subscribeOnOutsideClick();\r\n\r\n      await _displayUserVideo();\r\n      await _initializeDeviceLists();\r\n      _initializeSelectedDevices();\r\n    } catch (er) {\r\n      // this could happen if camera or mic (previously selected from modal) was disconnected\r\n      // app tried to fetch stream from device which is unplugged\r\n      if (['OverconstrainedError', 'ConstraintNotSatisfiedError'].includes(er.name)) {\r\n        // then try to fetch stream from default camera and mic\r\n        _onOverconstrainedErrorHandler();\r\n\r\n        criticalErrorSubject.update((_) => 'Unable to fetch stream from previously selected devices. They might be unplugged');\r\n\r\n        return;\r\n      }\r\n\r\n      const msg = mediaStreamErrorMsg(er.name);\r\n      criticalErrorSubject.update((_) => msg);\r\n\r\n      deviceSelectorPopupSubject.update((_) => false);\r\n    }\r\n  });\r\n\r\n  const _onOverconstrainedErrorHandler = async () => {\r\n    selectedCamera = null;\r\n    selectedMicrophone = null;\r\n\r\n    await _displayUserVideo();\r\n    await _initializeDeviceLists();\r\n    _initializeSelectedDevices();\r\n\r\n    saveDevices({ selectedCamera, selectedMicrophone, selectedSpeaker });\r\n  }\r\n\r\n  const _escapeButtonListener = (e) => {\r\n    if (e.key === 'Escape') {\r\n      deviceSelectorPopupSubject.update((_) => false);\r\n    }\r\n  };\r\n\r\n  const _outsideClickListener = (e) => {\r\n    const modal = document.querySelector('.main-modal-wrap');\r\n\r\n    if (e.target.contains(modal)) {\r\n      deviceSelectorPopupSubject.update((_) => false);\r\n    }\r\n  };\r\n\r\n  const _subscribeOnEscapeClick = () => {\r\n    window.addEventListener('keydown', _escapeButtonListener);\r\n  };\r\n\r\n  const _unsubscribeOnEscapeClick = () => {\r\n    window.removeEventListener('keydown', _escapeButtonListener);\r\n  };\r\n\r\n  const _subscribeOnOutsideClick = () => {\r\n    window.addEventListener('click', _outsideClickListener);\r\n  };\r\n\r\n  const _unsubscribeOnOutsideClick = () => {\r\n    window.removeEventListener('click', _outsideClickListener);\r\n  };\r\n\r\n  const _displayUserVideo = async () => {\r\n    const videoEl = document.getElementById('video');\r\n    const constraints = generateConstraintsObject(selectedCamera, selectedMicrophone);\r\n\r\n    stream = await getUserMedia(constraints);\r\n    videoEl.srcObject = stream;\r\n  };\r\n\r\n  const _initializeDeviceLists = async () => {\r\n    const [_cameras, _microphones, _speakers] = await getMediaDevices();\r\n\r\n    cameras = _cameras;\r\n    microphones = _microphones;\r\n    speakers = _speakers;\r\n  };\r\n\r\n  const _initializeSelectedDevices = () => {\r\n    selectedCamera = _getDefaultCamera();\r\n    selectedMicrophone = _getDefaultMicrophone();\r\n    selectedSpeaker = _getDefaultSpeaker(speakers);\r\n  };\r\n\r\n  const _getDefaultCamera = () => {\r\n    return _getDefaultDevice(cameras);\r\n  };\r\n\r\n  const _getDefaultMicrophone = () => {\r\n    return _getDefaultDevice(microphones);\r\n  };\r\n\r\n  const _getDefaultSpeaker = (devices) => {\r\n    const alreadySelectedDevices = fetchDevices();\r\n\r\n    if (alreadySelectedDevices) {\r\n      return selectedSpeaker;\r\n    }\r\n\r\n    const [speaker] = distinct(devices);\r\n\r\n    return speaker || devices[0];\r\n  };\r\n\r\n  const _getDefaultDevice = (devices) => {\r\n    const defaultSystemLabels = _getDefaultDevicesLabels();\r\n\r\n    const groupId = devices.find((device) => defaultSystemLabels.includes(device.label))?.groupId;\r\n\r\n    const selectedDevice = distinct(devices).find((d) => d.groupId === groupId);\r\n    return selectedDevice;\r\n  };\r\n\r\n  const _getDefaultDevicesLabels = () => {\r\n    return stream.getTracks().map((track) => track.label);\r\n  };\r\n\r\n  const _findDeviceById = (devices, id) => {\r\n    const [device] = _filterDevicesBy(devices, 'deviceId', id);\r\n    return device;\r\n  };\r\n\r\n  const _filterDevicesBy = (devices, prop, value) => {\r\n    return devices.filter((device) => device[prop] === value);\r\n  };\r\n\r\n  const _stopStreamTracks = () => {\r\n    if (stream) {\r\n      stream.getTracks().map((track) => track.stop());\r\n    }\r\n\r\n    stream = null;\r\n    video.srcObject = null;\r\n  };\r\n\r\n  function distinct(devices) {\r\n    return devices.filter((device) => !['default', 'communications'].includes(device.deviceId));\r\n  }\r\n\r\n  async function onCameraSelect({ detail }) {\r\n    try {\r\n      const cameraId = detail;\r\n      selectedCamera = _findDeviceById(distinct(cameras), cameraId);\r\n\r\n      _stopStreamTracks();\r\n\r\n      stream = await getUserMedia(generateConstraintsObject(selectedCamera, selectedMicrophone));\r\n      video.srcObject = stream;\r\n    } catch (er) {\r\n      const msg = mediaStreamErrorMsg(er.name);\r\n      criticalErrorSubject.update((_) => msg);\r\n\r\n      deviceSelectorPopupSubject.update((_) => false);\r\n    }\r\n  }\r\n\r\n  function onMicrophoneSelect({ detail }) {\r\n    const microphoneId = detail;\r\n    selectedMicrophone = _findDeviceById(distinct(microphones), microphoneId);\r\n  }\r\n\r\n  function onSpeakerSelect({ detail }) {\r\n    const speakerId = detail;\r\n    selectedSpeaker = _findDeviceById(distinct(speakers), speakerId);\r\n  }\r\n\r\n  function onSaveButtonClick() {\r\n    saveDevices({ selectedCamera, selectedMicrophone, selectedSpeaker });\r\n    deviceSelectorPopupSubject.update((_) => false);\r\n  }\r\n\r\n  onDestroy(() => {\r\n    _stopStreamTracks();\r\n    _unsubscribeOnEscapeClick();\r\n    _unsubscribeOnOutsideClick();\r\n  });\r\n</script>\r\n\r\n<style>\r\n  .main-modal-wrap {\r\n    top: 0;\r\n    transition: 0.3s;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    position: absolute;\r\n    background: rgba(0, 0, 0, 0.329);\r\n    backdrop-filter: blur(3px);\r\n\r\n    color: #eee;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .main-modal {\r\n    padding: 40px;\r\n    background: rgb(0, 0, 0);\r\n    border-radius: 10px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    position: relative;\r\n  }\r\n\r\n  .video-container {\r\n    max-width: 100%;\r\n    height: 200px;\r\n    overflow: hidden;\r\n  }\r\n\r\n  #video {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .spinner-wrap {\r\n    position: absolute;\r\n    top: 100px;\r\n  }\r\n</style>\r\n\r\n<div class=\"main-modal-wrap\">\r\n  <div class=\"main-modal\">\r\n    {#if !stream}\r\n      <div class=\"spinner-wrap\">\r\n        <Spinner />\r\n      </div>\r\n    {/if}\r\n\r\n    <div class=\"video-container\"><video playsinline autoplay muted id=\"video\" /></div>\r\n\r\n    <Select\r\n      on:onSelect={onCameraSelect}\r\n      defaultValue={selectedCamera?.deviceId}\r\n      key=\"deviceId\"\r\n      value=\"label\"\r\n      title=\"Default camera\"\r\n      items={distinct(cameras)} />\r\n\r\n    <Select\r\n      on:onSelect={onMicrophoneSelect}\r\n      defaultValue={selectedMicrophone?.deviceId}\r\n      key=\"deviceId\"\r\n      value=\"label\"\r\n      title=\"Default microphone\"\r\n      items={distinct(microphones)} />\r\n\r\n    {#if !isMobile()}\r\n      <Select\r\n        on:onSelect={onSpeakerSelect}\r\n        defaultValue={selectedSpeaker?.deviceId}\r\n        key=\"deviceId\"\r\n        value=\"label\"\r\n        title=\"Default speaker\"\r\n        items={distinct(speakers)} />\r\n    {/if}\r\n\r\n    <Button on:onClick={onSaveButtonClick}>Save</Button>\r\n  </div>\r\n</div>\r\n","const socket = io('https://calling-daniel-application.herokuapp.com/');\r\n\r\nexport const on = (event, fn) => {\r\n  socket.on(event, fn);\r\n};\r\n\r\nexport const off = (event) => {\r\n  socket.off(event);\r\n};\r\n\r\nexport const emit = (event, data) => {\r\n  socket.emit(event, data);\r\n};\r\n\r\nexport const offListener = (event, fn) => {\r\n  socket.off(event, fn)\r\n}\r\n","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let username;\r\n\r\n  function handleAcceptCall() {\r\n    dispatch('onAccept');\r\n  }\r\n\r\n  function handleDropCall() {\r\n    dispatch('onDrop');\r\n  }\r\n</script>\r\n\r\n<style>\r\n  @keyframes blinking {\r\n    0% {\r\n      box-shadow: none;\r\n    }\r\n    50% {\r\n      box-shadow: 0 0 44px -11px #4caf4fa1;\r\n    }\r\n    100% {\r\n      box-shadow: none;\r\n    }\r\n  }\r\n\r\n  @keyframes shaking {\r\n    0% {\r\n      transform: none;\r\n    }\r\n    30% {\r\n      transform: rotate(-10deg);\r\n    }\r\n\r\n    40% {\r\n      transform: rotate(10deg);\r\n    }\r\n    50% {\r\n      transform: rotate(-10deg);\r\n    }\r\n    60% {\r\n      transform: rotate(10deg);\r\n    }\r\n    70% {\r\n      transform: rotate(-10deg);\r\n    }\r\n\r\n    100% {\r\n      transform: none;\r\n    }\r\n  }\r\n\r\n  .incoming-wrap {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    backdrop-filter: blur(10px);\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .username-label {\r\n    padding: 20px;\r\n  }\r\n\r\n  .incoming {\r\n    border-radius: 20px;\r\n    padding: 40px;\r\n    background-color: #202020;\r\n    color: #eee;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    animation: blinking 2s ease-in-out infinite;\r\n    border: 3px solid rgb(22, 22, 22);\r\n  }\r\n\r\n  .accept-call-container {\r\n    height: 35px;\r\n    border-radius: 20px;\r\n    background: linear-gradient(to left, #202020, #4caf50);\r\n    box-shadow: 0 0 10px #0e0e0e;\r\n\r\n    margin: 10px 0;\r\n  }\r\n\r\n  .drop-call-container {\r\n    height: 35px;\r\n    border-radius: 20px;\r\n    background: linear-gradient(to left, #f44336, #202020);\r\n    box-shadow: 0 0 10px #0e0e0e;\r\n\r\n    margin: 10px 0;\r\n  }\r\n\r\n  .accept-call-container button {\r\n    outline: none;\r\n    border: none;\r\n    width: 35px;\r\n    height: 35px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    background-color: #4caf50;\r\n    color: #fff;\r\n    box-shadow: 0 0 5px #202020;\r\n    animation: shaking 1.3s ease infinite;\r\n  }\r\n\r\n  .drop-call-container button {\r\n    outline: none;\r\n    border: none;\r\n    width: 35px;\r\n    height: 35px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    background-color: #f44336;\r\n    color: #fff;\r\n    box-shadow: 0 0 5px #202020;\r\n    transform: rotate(-135deg);\r\n    float: right;\r\n  }\r\n\r\n  h3 {\r\n    color: #eee;\r\n  }\r\n</style>\r\n\r\n<div class=\"incoming-wrap\">\r\n  <div class=\"incoming\">\r\n    <h3 class=\"username-label\"><b>{username}</b> is calling you</h3>\r\n    <div class=\"accept-call-container\">\r\n      <button on:click={handleAcceptCall}> <i class=\"fas fa-phone-volume\" /> </button>\r\n    </div>\r\n    <div class=\"drop-call-container\"><button on:click={handleDropCall}><i class=\"fas fa-phone\" /></button></div>\r\n  </div>\r\n</div>\r\n","export const createLogger = (...fns) => {\r\n  return (initial) => fns.reduce((param, func) => func(param), initial);\r\n};\r\n\r\nexport const rtcLog = createLogger((x) => {\r\n  console.log(`%c👉👈 (webrtc) ${x}`, `color: #2dd713; font-weight: bold; font-size: 0.9rem; `);\r\n  return x;\r\n});\r\n\r\nexport const rtcError = createLogger((x) => {\r\n  console.log(`%c❌❌ (webrtc) ${x}`, `color: tomato; font-weight: bold; font-size: 0.9rem; `);\r\n  return x;\r\n});\r\n","export const iceServers = [\r\n  { urls: 'stun:stun.voipstunt.com' },\r\n  {\r\n    urls: 'turn:numb.viagenie.ca',\r\n    credential: 'muazkh',\r\n    username: 'webrtc@live.com',\r\n  },\r\n  {\r\n    urls: 'turn:192.158.29.39:3478?transport=udp',\r\n    credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n    username: '28224511:1379330808',\r\n  },\r\n];\r\n","import { iceServers } from '../ice-servers';\r\n\r\nexport const streamTypeToSocketEvents = (mode) => {\r\n  switch (mode) {\r\n    case 'video-call':\r\n      return {\r\n        offer: 'video-offer',\r\n        answer: 'video-answer',\r\n        iceCandidate: 'ice-candidate',\r\n      };\r\n\r\n    case 'screenshare':\r\n      return {\r\n        offer: 'video-screen-sharing-offer',\r\n        answer: 'video-screen-sharing-answer',\r\n        iceCandidate: 'ice-screen-sharing-candidate',\r\n      };\r\n    \r\n    default: return {};\r\n  }\r\n};\r\n\r\nexport const stopTracks = (stream) => {\r\n  if (!stream) {\r\n    return;\r\n  }\r\n\r\n  stream.getTracks().map((track) => track.stop());\r\n  stream = null;\r\n};\r\n\r\nexport const attachStreamToVideoElement = (id, stream) => {\r\n  const video = document.getElementById(id);\r\n\r\n  if (video && stream) {\r\n    video.srcObject = stream;\r\n  }\r\n};\r\n\r\nexport const createPeer = () => new RTCPeerConnection({ iceServers: iceServers });\r\n\r\nexport const detachStreamFromVideoElement = (id) => {\r\n  const video = document.getElementById(id);\r\n\r\n  video.srcObject = null;\r\n  video.removeAttribute('srcObject');\r\n};\r\n\r\nexport const addTracksToPeer = (peer, stream) => {\r\n  stream.getTracks().forEach((track) => {\r\n    peer.addTrack(track, stream);\r\n  });\r\n};\r\n\r\nexport const replaceTrackForPeer = (peer, stream, kind) => {\r\n  const track = stream.getTracks().find((t) => t.kind === kind);\r\n  const sender = peer.getSenders().find((s) => s.track.kind === kind);\r\n\r\n  sender.replaceTrack(track);\r\n\r\n  return track;\r\n};\r\n\r\nexport const closePeerConnection = (peer) => {\r\n  if (!peer) {\r\n    return;\r\n  }\r\n\r\n  peer.ontrack = null;\r\n  peer.onremovetrack = null;\r\n  peer.onremovestream = null;\r\n  peer.onicecandidate = null;\r\n  peer.oniceconnectionstatechange = null;\r\n  peer.onsignalingstatechange = null;\r\n  peer.onicegatheringstatechange = null;\r\n  peer.onnegotiationneeded = null;\r\n\r\n  peer.close();\r\n  peer = null;\r\n};\r\n","<script>\r\n  import { mediaStreamErrorMsg } from './../services/media-stream-error-message.js';\r\n  import Spinner from './Spinner.svelte';\r\n  import { generateConstraintsObject, getUserMedia, getDisplayMedia } from './../services/media-devices.js';\r\n  import { criticalErrorSubject, deviceSelectorPopupSubject } from './../stores.js';\r\n  import { onDestroy, onMount } from 'svelte';\r\n  import { fetchDevices, saveDevices } from '../services/local-storage.js';\r\n  import { emit, off, on } from '../services/socket.js';\r\n  import { rtcError, rtcLog } from '../services/logger.js';\r\n  import { isMobile } from '../services/is-mobile.js';\r\n  import {\r\n    streamTypeToSocketEvents,\r\n    closePeerConnection,\r\n    stopTracks,\r\n    replaceTrackForPeer,\r\n    attachStreamToVideoElement,\r\n    createPeer,\r\n    detachStreamFromVideoElement,\r\n    addTracksToPeer,\r\n  } from '../services/webrtc';\r\n\r\n  export let uid, participantUid, username, initiator;\r\n\r\n  $: videoTooltip = videoOff ? 'Unmute Video' : 'Mute Video';\r\n  $: audioTooltip = audioOff ? 'Unmute Audio' : 'Mute Audio';\r\n  $: shareTooltip = youAreSharingScreen ? 'Stop Sharing Screen' : 'Share Screen';\r\n\r\n  let devices, // {selectedCamera, selectedMicrophone, selectedSpeaker}\r\n    yourVideoStream,\r\n    yourScreenSharingStream,\r\n    peer,\r\n    screenSharingPeer,\r\n    offerInterval,\r\n    youAreSharingScreen = false,\r\n    audioOff = false,\r\n    videoOff = false;\r\n\r\n  const streams = new Map();\r\n\r\n  const _generateConstraints = () => {\r\n    return generateConstraintsObject(devices?.selectedCamera, devices?.selectedMicrophone);\r\n  };\r\n\r\n  const _asOfferer = async (peer, mode = 'video-call') => {\r\n    const { offer, answer } = streamTypeToSocketEvents(mode);\r\n\r\n    peer.onnegotiationneeded = async () => {\r\n      peer\r\n        .createOffer()\r\n        .then((offer) => {\r\n          return peer.setLocalDescription(offer);\r\n        })\r\n        .then(() => {\r\n          // sending offer until another peer answers\r\n          offerInterval = setInterval(() => {\r\n            emit(offer, { initiatorUid: uid, targetUid: participantUid, sdp: peer.localDescription });\r\n            rtcLog(`${offer} sent to another peer`);\r\n\r\n          }, 1000);\r\n        })\r\n        .catch(_onHandshakeError);\r\n    };\r\n\r\n\r\n    on(answer, function (data) {\r\n      rtcLog(`got ${answer} from another peer`);\r\n      clearInterval(offerInterval);\r\n\r\n      peer.setRemoteDescription(new RTCSessionDescription(data.sdp));\r\n\r\n      _bindCommonEventListeners(peer, mode);\r\n\r\n      off(answer);\r\n    });\r\n  };\r\n\r\n  const _asAnswerer = (peer, mode = 'video-call') => {\r\n    const { offer, answer } = streamTypeToSocketEvents(mode);\r\n\r\n    _bindCommonEventListeners(peer, mode);\r\n\r\n    on(offer, async (data) => {\r\n      rtcLog('received offer from another peer');\r\n\r\n      peer\r\n        .setRemoteDescription(new RTCSessionDescription(data.sdp))\r\n        .then(() => {\r\n          console.warn('remote desc here')\r\n          \r\n\r\n          return peer.createAnswer();\r\n        })\r\n        .then((answer) => {\r\n          return peer.setLocalDescription(answer);\r\n        })\r\n        .then(() => {\r\n          emit(answer, { initiatorUid: uid, targetUid: participantUid, sdp: peer.localDescription });\r\n        })\r\n        .catch(_onHandshakeError);\r\n\r\n      off(offer);\r\n    });\r\n  };\r\n\r\n  const _onHandshakeError = (er) => {\r\n    rtcError('Something went wrong during webrtc handshaking.');\r\n    criticalErrorSubject.update((_) => 'Something went wrong during the handshaking.');\r\n    criticalErrorSubject.update((_) => 'Reload the page and try again.');\r\n\r\n    clearInterval(offerInterval);\r\n\r\n    console.error(er);\r\n  };\r\n\r\n  const _onRtcStreamAdded = (stream) => {\r\n    if (streams.has(stream.id)) {\r\n      return;\r\n    }\r\n\r\n    streams.set(stream.id, stream);\r\n\r\n    if (streams.size === 1) {\r\n      attachStreamToVideoElement('participantPrimaryVideo', stream);\r\n    } else if (streams.size === 2) {\r\n      attachStreamToVideoElement('participantSecondaryVideo', _getFirstItemOfMap(streams).value);\r\n      attachStreamToVideoElement('participantPrimaryVideo', stream);\r\n    }\r\n  };\r\n\r\n  const _getFirstItemOfMap = (map) => {\r\n    return map.values().next();\r\n  };\r\n\r\n  const _bindCommonEventListeners = (peer, mode) => {\r\n    const { iceCandidate } = streamTypeToSocketEvents(mode);\r\n\r\n    peer.ontrack = (event) => {\r\n      _onRtcStreamAdded(event.streams[0]);\r\n      rtcLog('tracks came from another peer');\r\n    };\r\n\r\n    peer.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        emit(iceCandidate, { initiatorUid: uid, targetUid: participantUid, candidate: e.candidate });\r\n      }\r\n    };\r\n\r\n    on(iceCandidate, (data) => {\r\n      if (data.candidate) {\r\n        rtcLog(`${iceCandidate} - received`);\r\n        peer.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n      }\r\n    });\r\n  };\r\n\r\n  const _fetchStream = async () => {\r\n    return getUserMedia(_generateConstraints());\r\n  };\r\n\r\n  const _setSinkId = async (htmlElementId, speaker) => {\r\n    try {\r\n      if (!htmlElementId || !speaker) {\r\n        return;\r\n      }\r\n\r\n      const participantVideo = document.getElementById(htmlElementId);\r\n\r\n      // setSinkId is not supported on mobile (see docs)\r\n      if (participantVideo && speaker.deviceId && !isMobile()) {\r\n        await participantVideo.setSinkId(speaker.deviceId);\r\n      }\r\n    } catch (er) {\r\n      const msg = mediaStreamErrorMsg(er.name);\r\n\r\n      criticalErrorSubject.update((_) => msg);\r\n      criticalErrorSubject.update((_) => 'Cannot play audio on the selected speaker. Default speaker is used.');\r\n\r\n      saveDevices({ selectedCamera: devices?.selectedCamera, selectedMicrophone: devices?.selectedMicrophone });\r\n    }\r\n  };\r\n\r\n  const _unsubscribeFromSocketEvents = (mode) => {\r\n    Object.values(streamTypeToSocketEvents(mode)).map((socketEvent) => {\r\n      off(socketEvent);\r\n    });\r\n  };\r\n\r\n  const _startScreenSharing = async () => {\r\n    yourScreenSharingStream = await getDisplayMedia();\r\n    screenSharingPeer = createPeer();\r\n\r\n    emit('start-screen-sharing', {\r\n      initiatorUid: uid,\r\n      targetUid: participantUid,\r\n      sdp: screenSharingPeer.localDescription,\r\n    });\r\n\r\n    addTracksToPeer(screenSharingPeer, yourScreenSharingStream);\r\n    _asOfferer(screenSharingPeer, 'screenshare');\r\n\r\n    yourScreenSharingStream.getVideoTracks()[0].onended = _stopScreenSharing;\r\n\r\n    youAreSharingScreen = true;\r\n  };\r\n\r\n  const _stopScreenSharing = () => {\r\n    youAreSharingScreen = false;\r\n\r\n    emit('stop-screen-sharing', {\r\n      initiatorUid: uid,\r\n      targetUid: participantUid,\r\n      streamId: yourScreenSharingStream.id,\r\n    });\r\n\r\n    closePeerConnection(screenSharingPeer);\r\n    _unsubscribeFromSocketEvents('screenshare');\r\n    stopTracks(yourScreenSharingStream);\r\n    yourScreenSharingStream = null;\r\n  };\r\n\r\n  onMount(async () => {\r\n    try {\r\n      devices = fetchDevices();\r\n      yourVideoStream = await _fetchStream();\r\n\r\n      attachStreamToVideoElement('yourVideo', yourVideoStream);\r\n      _setSinkId('participantVideo', devices?.selectedSpeaker);\r\n\r\n      peer = createPeer();\r\n      addTracksToPeer(peer, yourVideoStream);\r\n\r\n      if (initiator) {\r\n        _asOfferer(peer, 'video-call');\r\n      } else {\r\n        _asAnswerer(peer, 'video-call');\r\n      }\r\n\r\n      on('participant-starts-screen-sharing', () => {\r\n        screenSharingPeer = createPeer();\r\n\r\n        _asAnswerer(screenSharingPeer, 'screenshare');\r\n      });\r\n\r\n      on('participant-stops-screen-sharing', ({ streamId }) => {\r\n        closePeerConnection(screenSharingPeer);\r\n        _unsubscribeFromSocketEvents('screenshare');\r\n        stopTracks(streams.get(streamId));\r\n\r\n        streams.delete(streamId);\r\n\r\n        detachStreamFromVideoElement('participantSecondaryVideo');\r\n        attachStreamToVideoElement('participantPrimaryVideo', _getFirstItemOfMap(streams).value);\r\n      });\r\n    } catch (er) {\r\n      const msg = mediaStreamErrorMsg(er.name);\r\n      criticalErrorSubject.update((_) => msg);\r\n\r\n      clearInterval(offerInterval);\r\n    }\r\n  });\r\n\r\n  async function toggleMyVideo() {\r\n    videoOff = !videoOff;\r\n\r\n    if (!videoOff) {\r\n      const newStream = await _fetchStream();\r\n      const track = replaceTrackForPeer(peer, newStream, 'video');\r\n\r\n      yourVideoStream.addTrack(track);\r\n\r\n      attachStreamToVideoElement('yourVideo', yourVideoStream);\r\n    } else {\r\n      yourVideoStream.getVideoTracks()[0].enabled = false;\r\n\r\n      setTimeout(() => {\r\n        yourVideoStream.getVideoTracks()[0].stop();\r\n        yourVideoStream.removeTrack(yourVideoStream.getVideoTracks()[0]);\r\n      }, 150);\r\n\r\n      // if you remove tracks immediately after disabling track (enabled = false)\r\n      // your video will be freezed for another participant\r\n    }\r\n  }\r\n\r\n  async function shareScreen() {\r\n    try {\r\n      if (youAreSharingScreen) {\r\n        _stopScreenSharing();\r\n      } else {\r\n        _startScreenSharing();\r\n      }\r\n    } catch (er) {\r\n      if (er.name === 'NotAllowedError') {\r\n        return criticalErrorSubject.update((_) => \"You've canceled sharing screen\");\r\n      }\r\n\r\n      criticalErrorSubject.update(\r\n        (_) => 'Something went wrong during a screen sharing. Your browser may not support this feature ;('\r\n      );\r\n\r\n      console.error(er);\r\n    }\r\n  }\r\n\r\n  function toggleMyMicrophone() {\r\n    audioOff = !audioOff;\r\n    yourVideoStream.getAudioTracks()[0].enabled = !yourVideoStream.getAudioTracks()[0].enabled;\r\n  }\r\n\r\n  function endCall() {}\r\n\r\n  onDestroy(() => {\r\n    stopTracks(yourVideoStream);\r\n    stopTracks(yourScreenSharingStream);\r\n  });\r\n</script>\r\n\r\n<div class=\"incoming-wrap\">\r\n  <!-- {participantUid} {username} {uid} -->\r\n  <div class=\"incoming\">\r\n    <div class:hidden={videoOff} class=\"yourVideo-container\">\r\n      <video playsinline class:shadow={yourVideoStream} id=\"yourVideo\"  autoplay muted={true} />\r\n      <video playsinline id=\"participantSecondaryVideo\" autoplay  />\r\n      {#if !yourVideoStream}\r\n        <Spinner style=\"position: absolute\" />\r\n      {/if}\r\n    </div>\r\n\r\n    <div class=\"participant-video-container\"><video playsinline id=\"participantPrimaryVideo\" autoplay /></div>\r\n\r\n    <div class=\"call-menu\">\r\n      <div class=\"call-menu-actions\">\r\n        <button class=\"action-button action-button__video\" class:mute={videoOff} on:click={toggleMyVideo}>\r\n          <span class=\"tooltip\">{videoTooltip}</span>\r\n          <i class=\"fas fa-video\" />\r\n        </button>\r\n        <button class=\"action-button action-button__end-call\" on:click={endCall}>\r\n          <span class=\"tooltip\">End Call</span>\r\n          <i class=\"fas fa-phone\" />\r\n        </button>\r\n        <button class=\"action-button action-button__audio\" class:mute={audioOff} on:click={toggleMyMicrophone}>\r\n          <span class=\"tooltip\">{audioTooltip}</span>\r\n          <i class=\"fas fa-microphone-alt\" />\r\n        </button>\r\n        <button\r\n          class=\"action-button action-button__sharing\"\r\n          class:sharing={youAreSharingScreen}\r\n          on:click={shareScreen}\r\n        >\r\n          <span class=\"tooltip\">{shareTooltip}</span>\r\n          <i class=\"fas fa-desktop\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .incoming-wrap {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    backdrop-filter: blur(10px);\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .incoming {\r\n    border-radius: 30px;\r\n    background-color: #202020;\r\n    color: #eee;\r\n\r\n    box-shadow: 0 0 44px -11px #131313;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    animation: blinking 2s ease-in-out infinite;\r\n    border: 3px solid rgb(22, 22, 22);\r\n\r\n    width: 90%;\r\n    max-width: 1400px;\r\n\r\n    height: 100vh;\r\n    max-height: 1000px;\r\n\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .yourVideo-container {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 260px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .yourVideo-container video {\r\n    max-width: 100%;\r\n    border-radius: 20px;\r\n    z-index: 2;\r\n  }\r\n\r\n  .shadow {\r\n    box-shadow: 0 0 15px #131313;\r\n  }\r\n\r\n  .participant-video-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  #participantPrimaryVideo {\r\n    height: 100%;\r\n    z-index: 1;\r\n  }\r\n\r\n  #participantSecondaryVideo {\r\n    margin: 20px 0;\r\n  }\r\n\r\n  .call-menu {\r\n    position: absolute;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    left: -10px;\r\n    right: -10px;\r\n    border-bottom-left-radius: 20px;\r\n    border-bottom-right-radius: 20px;\r\n    background: rgba(49, 49, 49, 0);\r\n    padding: 20px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .action-button {\r\n    color: #ffffff;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 1.1rem;\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n    background: rgb(77, 77, 77);\r\n    width: 40px;\r\n    height: 40px;\r\n    box-shadow: 0 0 3px rgb(29, 29, 29);\r\n    transition: 0.1s ease;\r\n    position: relative;\r\n    margin: 0 10px;\r\n  }\r\n\r\n  .action-button .tooltip {\r\n    position: absolute;\r\n    top: -10px;\r\n    left: 50%;\r\n    color: #000;\r\n    text-align: center;\r\n    transform: translateX(-50%);\r\n    font-size: 0.8rem;\r\n    background: rgb(247, 250, 52);\r\n    padding: 3px 7px;\r\n    border-radius: 5px;\r\n    top: -30px;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    transition: 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);\r\n    transition-property: top opacity;\r\n    z-index: 1;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .action-button .tooltip::before {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    bottom: -6px;\r\n\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    border-width: 7px 7.5px 0 7.5px;\r\n    border-color: rgb(247, 250, 52) transparent transparent transparent;\r\n  }\r\n\r\n  .action-button__sharing.sharing {\r\n    background: #ef5350;\r\n  }\r\n\r\n  .action-button__end-call .tooltip {\r\n    background: #ef5350;\r\n  }\r\n\r\n  .action-button__end-call .tooltip::before {\r\n    border-color: #ef5350 transparent transparent transparent;\r\n  }\r\n\r\n  .action-button:hover .tooltip {\r\n    top: -35px;\r\n    visibility: visible;\r\n    opacity: 1;\r\n  }\r\n\r\n  .action-button::after {\r\n    position: absolute;\r\n    content: '';\r\n    width: 0;\r\n    height: 2px;\r\n    background: #fff;\r\n    transform: rotate(35deg);\r\n    left: 12px;\r\n    top: 12px;\r\n    transition: 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) 0.2s;\r\n    transform-origin: 0 0;\r\n    transition-property: width;\r\n    border-radius: 1px;\r\n  }\r\n\r\n  .action-button::before {\r\n    position: absolute;\r\n    content: '';\r\n    width: 0;\r\n    border-radius: 1px;\r\n\r\n    height: 2px;\r\n    background: rgb(77, 77, 77);\r\n\r\n    transform: rotate(35deg);\r\n    transform-origin: 0 0;\r\n\r\n    left: 10px;\r\n    top: 13px;\r\n    transition: width 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) 0.2s;\r\n  }\r\n\r\n  .action-button:hover {\r\n    box-shadow: 0 0 4px rgb(0, 0, 0);\r\n  }\r\n\r\n  .action-button:active {\r\n    background: #ef5350;\r\n  }\r\n\r\n  .mute {\r\n    background: #ef5350;\r\n  }\r\n\r\n  .mute::after,\r\n  .mute::before {\r\n    width: 23px;\r\n  }\r\n\r\n  .mute::before {\r\n    background: #ef5350;\r\n  }\r\n\r\n  .action-button__end-call {\r\n    /* background: #ef5350; */\r\n  }\r\n\r\n  .action-button__end-call {\r\n    box-shadow: 0 0 5px #ef5350;\r\n    color: #ef5350;\r\n  }\r\n\r\n  .action-button__end-call:hover {\r\n    box-shadow: 0 0 8px #ef5350;\r\n  }\r\n\r\n  .action-button__end-call:active {\r\n    color: #fff;\r\n  }\r\n\r\n  .action-button__end-call i {\r\n    transform: rotate(225deg);\r\n  }\r\n\r\n  .call-menu-actions {\r\n    background: rgba(0, 0, 0, 0.623);\r\n    border-radius: 30px;\r\n    padding: 10px;\r\n  }\r\n\r\n  .hidden {\r\n    visibility: hidden;\r\n  }\r\n</style>\r\n","<script>\r\n  import CriticalToastContainer from './components/CriticalToastContainer.svelte';\r\n  import { copy } from './services/copy.js';\r\n  import Button from './components/Button.svelte';\r\n  import { deviceSelectorPopupSubject, userInfoSubject, criticalErrorSubject } from './stores.js';\r\n  import DeviceSettingsModal from './components/DeviceSettingsModal.svelte';\r\n  import { on, emit, off } from './services/socket';\r\n  import { fetchUserDetails, saveUserDetails } from './services/local-storage';\r\n  import { onMount } from 'svelte';\r\n  import Emoji from './components/Emoji.svelte';\r\n  import Splitter from './components/Splitter.svelte';\r\n  import IncomingCall from './components/IncomingCall.svelte';\r\n  import Call from './components/Call.svelte';\r\n\r\n  const MAXIMUM_UID_LENGTH = 4;\r\n\r\n  let showDeviceSettingsPopup, username, uid, participantUid;\r\n  let copyText = 'Click to copy';\r\n  let joined = false,\r\n    callAccepted = false,\r\n    initiator = false,\r\n    incomingCall = false;\r\n\r\n  let callerData;\r\n\r\n  $: callButtonDisabled = !(participantUid && participantUid.length === MAXIMUM_UID_LENGTH);\r\n\r\n  onMount(() => {\r\n    const user = fetchUserDetails();\r\n    userInfoSubject.update(() => user);\r\n  });\r\n\r\n  const handleWelcome = (data) => {\r\n    joined = true;\r\n    userInfoSubject.update((_) => data);\r\n    uid = data.uid;\r\n    saveUserDetails(data);\r\n  };\r\n\r\n  const handleIncomingCall = (data) => {\r\n    incomingCall = true;\r\n    callerData = data;\r\n  };\r\n\r\n  on('welcome', handleWelcome);\r\n  on('incoming-call', handleIncomingCall);\r\n  on('user-is-not-joined', () => {\r\n    criticalErrorSubject.update((_) => 'User is not joined yet or identifier is not correct.');\r\n  });\r\n\r\n  userInfoSubject.subscribe((val) => (username = val?.name));\r\n\r\n  deviceSelectorPopupSubject.subscribe((val) => {\r\n    showDeviceSettingsPopup = val;\r\n  });\r\n\r\n  function toggleDevicesSettingsPopup() {\r\n    deviceSelectorPopupSubject.update((value) => !value);\r\n  }\r\n\r\n  function handleJoin(e) {\r\n    emit('join', username);\r\n  }\r\n\r\n  function handleStartCall() {\r\n    initiator = true;\r\n\r\n    emit('try-call', { username, targetUid: participantUid, initiatorUid: uid });\r\n\r\n    on('accept-call', (data) => {\r\n      callAccepted = true;\r\n      incomingCall = false;\r\n      callerData = data;\r\n    });\r\n\r\n    on('drop-call', () => {\r\n      criticalErrorSubject.update((_) => 'Participant has dropped the call');\r\n      callerData = null;\r\n      incomingCall = false;\r\n      initiator = false;\r\n\r\n      off('accept-call');\r\n      off('drop-call');\r\n    });\r\n  }\r\n\r\n  function handleUidClick() {\r\n    copyText = 'Copied';\r\n    copy(uid);\r\n  }\r\n\r\n  function handleAcceptCall() {\r\n    callAccepted = true;\r\n    incomingCall = false;\r\n    initiator = false;\r\n    emit('accept-call', { username, targetUid: callerData.initiatorUid, initiatorUid: uid });\r\n  }\r\n\r\n  function handleDropCall() {\r\n    emit('drop-call', { username, targetUid: callerData.initiatorUid, initiatorUid: uid });\r\n\r\n    callerData = null;\r\n    incomingCall = false;\r\n\r\n    off('accept-call');\r\n    off('drop-call');\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    margin: 0 auto;\r\n    position: relative;\r\n    height: auto;\r\n    text-align: center;\r\n    padding: 40px;\r\n  }\r\n\r\n  .open-settings-btn {\r\n    position: absolute;\r\n    top: 34px;\r\n    right: 50px;\r\n    color: #fff;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: #fde931;\r\n    cursor: pointer;\r\n    z-index: 2;\r\n    font-size: 20px;\r\n  }\r\n\r\n  #name-input {\r\n    background-color: #555;\r\n    border: none;\r\n    outline: none;\r\n    box-shadow: 5px 5px 10px #000;\r\n    padding: 10px 20px;\r\n    border-radius: 10px;\r\n    color: #eee;\r\n    margin: 20px 0;\r\n    font-size: 1.4rem;\r\n    width: 300px;\r\n  }\r\n\r\n  .join-form {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .uid-label {\r\n    background: rgb(27, 27, 27);\r\n    display: inline-block;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    font-size: 3rem;\r\n    margin: 40px;\r\n    box-shadow: 0 0 10px #000;\r\n    position: relative;\r\n  }\r\n\r\n  .uid-label span {\r\n    position: absolute;\r\n    font-size: 0.9rem;\r\n    color: #ccc;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    padding: 5px 7px;\r\n    background-color: rgb(24, 24, 24);\r\n    border-radius: 5px;\r\n    top: 35px;\r\n    width: 110px;\r\n    right: -140px;\r\n    box-shadow: 0 0 10px #000;\r\n    transition: 0.1s cubic-bezier(0.55, 0.055, 0.675, 0.19);\r\n  }\r\n\r\n  .uid-label span:active {\r\n    transform: scale(0.9);\r\n  }\r\n\r\n  .uid-label span::before {\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    border-width: 15px 15px 15px 0;\r\n    border-color: transparent rgb(24, 24, 24) transparent transparent;\r\n    content: '';\r\n    display: block;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    left: -12px;\r\n  }\r\n\r\n  .uid-block {\r\n    margin: 20px;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    .join-form {\r\n      flex-direction: column;\r\n    }\r\n\r\n    .open-settings-btn {\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n\r\n    h1 {\r\n      margin-top: 100px;\r\n    }\r\n\r\n    .uid-label {\r\n      margin-bottom: 70px;\r\n    }\r\n\r\n    .uid-label span {\r\n      display: inline-table;\r\n      margin: 77px 8px;\r\n      left: 0;\r\n      bottom: 0;\r\n    }\r\n\r\n    .uid-label span::before {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <h1>\r\n    So\r\n    <Emoji>🤙</Emoji>\r\n    me maybe!\r\n  </h1>\r\n\r\n  <Splitter />\r\n\r\n  {#if !joined}\r\n    <div class=\"join-form\">\r\n      <h2 style=\"margin: 20px;\">Who are you?</h2>\r\n      <form on:submit|preventDefault={handleJoin}>\r\n        <input bind:value={username} type=\"text\" id=\"name-input\" placeholder=\"What is your name, hero?\" />\r\n        <Button type=\"submit\" disabled={!username}>Join</Button>\r\n      </form>\r\n    </div>\r\n  {:else}\r\n    <div class=\"uid-block\">\r\n      <h2>Your identifier is</h2>\r\n      <h3 class=\"uid-label\">{uid} <span on:click={handleUidClick}>{copyText}</span></h3>\r\n      <h3>Send it to the one who wanna call you and you will get in touch</h3>\r\n      <Splitter />\r\n\r\n      <h3>or enter identifier shared with you below</h3>\r\n\r\n      <form on:submit|preventDefault={handleStartCall}>\r\n        <input bind:value={participantUid} type=\"text\" id=\"name-input\" placeholder=\"XYZZ\" />\r\n        <Button type=\"submit\" disabled={callButtonDisabled}>Call</Button>\r\n      </form>\r\n    </div>\r\n  {/if}\r\n\r\n  {#if !callAccepted}\r\n    <span on:click={toggleDevicesSettingsPopup} class=\"open-settings-btn\">\r\n      {#if showDeviceSettingsPopup}<i class=\"fas fa-times\" />{:else}<i class=\"fas fa-cog\" />{/if}\r\n    </span>\r\n  {/if}\r\n\r\n  {#if callAccepted}\r\n    <Call {initiator} {uid} participantUid={callerData.initiatorUid} username={callerData.username} />\r\n    <!-- <Call /> -->\r\n  {/if}\r\n</main>\r\n\r\n{#if showDeviceSettingsPopup}\r\n  <DeviceSettingsModal />\r\n{/if}\r\n\r\n{#if incomingCall}\r\n  <IncomingCall on:onAccept={handleAcceptCall} on:onDrop={handleDropCall} username={callerData.username} />\r\n{/if}\r\n\r\n<CriticalToastContainer />\r\n","export const copy = (text) => {\r\n  navigator.clipboard.writeText(text);\r\n};\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n  target: document.body,\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","subscribe","invalidate","subscriber","deviceSelectorPopupSubject","userInfoSubject","criticalErrorSubject","show","status","errors","_unshiftError","shift","er","setTimeout","dispatch","mediaStreamErrorMsg","exception","isMobile","window","innerWidth","getUserMedia","constraintsObj","video","audio","navigator","mediaDevices","generateConstraintsObject","camera","microphone","generateDeviceConfig","device","deviceId","exact","filterByKind","devices","kind","saveDevices","localStorage","setItem","JSON","stringify","fetchDevices","rawDeviceData","getItem","parse","items","title","defaultValue","distinct","includes","stream","selectedCamera","selectedMicrophone","selectedSpeaker","cameras","microphones","speakers","alreadySelectedDevices","_subscribeOnEscapeClick","_subscribeOnOutsideClick","_displayUserVideo","_initializeDeviceLists","_initializeSelectedDevices","_onOverconstrainedErrorHandler","_","msg","_escapeButtonListener","_outsideClickListener","modal","querySelector","contains","videoEl","getElementById","constraints","srcObject","_cameras","_microphones","_speakers","async","enumerateDevices","getMediaDevices","_getDefaultCamera","_getDefaultMicrophone","_getDefaultSpeaker","_getDefaultDevice","speaker","defaultSystemLabels","_getDefaultDevicesLabels","groupId","find","label","getTracks","track","_findDeviceById","id","_filterDevicesBy","prop","_stopStreamTracks","cameraId","microphoneId","speakerId","socket","io","on","off","emit","username","createLogger","initial","reduce","param","func","rtcLog","x","console","log","rtcError","iceServers","urls","credential","streamTypeToSocketEvents","mode","offer","answer","iceCandidate","stopTracks","attachStreamToVideoElement","createPeer","RTCPeerConnection","addTracksToPeer","peer","addTrack","closePeerConnection","ontrack","onremovetrack","onremovestream","onicecandidate","oniceconnectionstatechange","onsignalingstatechange","onicegatheringstatechange","onnegotiationneeded","close","endCall","yourVideoStream","yourScreenSharingStream","screenSharingPeer","offerInterval","uid","participantUid","initiator","youAreSharingScreen","audioOff","videoOff","streams","_asOfferer","createOffer","setLocalDescription","setInterval","initiatorUid","targetUid","sdp","localDescription","catch","_onHandshakeError","clearInterval","setRemoteDescription","RTCSessionDescription","_bindCommonEventListeners","_asAnswerer","warn","createAnswer","error","_getFirstItemOfMap","values","next","size","candidate","addIceCandidate","RTCIceCandidate","_fetchStream","_unsubscribeFromSocketEvents","socketEvent","_startScreenSharing","getDisplayMedia","getVideoTracks","onended","_stopScreenSharing","streamId","htmlElementId","participantVideo","setSinkId","_setSinkId","get","detachStreamFromVideoElement","videoTooltip","audioTooltip","shareTooltip","enabled","removeTrack","newStream","t","getSenders","replaceTrack","replaceTrackForPeer","getAudioTracks","important","setProperty","showDeviceSettingsPopup","callerData","copyText","joined","callAccepted","incomingCall","user","raw","fetchUserDetails","saveUserDetails","val","callButtonDisabled","clipboard","writeText","copy","body"],"mappings":"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"}